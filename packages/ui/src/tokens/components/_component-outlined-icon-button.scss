//
// Copyright 2023 Google LLC
// SPDX-License-Identifier: Apache-2.0
//

@use 'sass:map';
@use 'sass:string';
@use '../internal/shape' as shape-util;
@use '../internal/validate';
@use '../color';
@use '../shape';
@use '../state';
@use './prototype/prototype-outlined-icon-button';
$supported-tokens: (
  'container-height',
  'container-shape',
  'container-shape-end-end',
  'container-shape-end-start',
  'container-shape-start-end',
  'container-shape-start-start',
  'container-width',
  'disabled-icon-color',
  'disabled-icon-opacity',
  'disabled-outline-color',
  'disabled-outline-opacity',
  'disabled-selected-container-color',
  'disabled-selected-container-opacity',
  'focus-icon-color',
  'hover-icon-color',
  'hover-state-layer-color',
  'hover-state-layer-opacity',
  'icon-color',
  'icon-size',
  'outline-color',
  'outline-width',
  'pressed-icon-color',
  'pressed-state-layer-color',
  'pressed-state-layer-opacity',
  'selected-container-color',
  'selected-focus-icon-color',
  'selected-hover-icon-color',
  'selected-hover-state-layer-color',
  'selected-icon-color',
  'selected-pressed-icon-color',
  'selected-pressed-state-layer-color',
);
$unsupported-tokens: (
  'focus-state-layer-color',
  'focus-state-layer-opacity',
  'selected-focus-state-layer-color',
);
$_default: (
  'gu-sys-color': color.values-light(),
  'gu-sys-shape': shape.values(),
  'gu-sys-state': state.values(),
);

@function values($deps: $_default,
  $exclude-hardcoded-values: false,
  $exclude-custom-properties: true) {
  $tokens: prototype-outlined-icon-button.values($deps,
      $exclude-hardcoded-values );
  $new-tokens: shape-util.get-new-logical-shape-tokens($tokens, 'container-shape');
  $tokens: validate.values($tokens,
      $supported-tokens: $supported-tokens,
      $unsupported-tokens: $unsupported-tokens,
      $new-tokens: $new-tokens,
      $renamed-tokens: (
      'disabled-unselected-outline-color': 'disabled-outline-color',
      'disabled-unselected-outline-opacity': 'disabled-outline-opacity',
      'unselected-focus-icon-color': 'focus-icon-color',
      'unselected-hover-icon-color': 'hover-icon-color',
      'unselected-hover-state-layer-color': 'hover-state-layer-color',
      'unselected-icon-color': 'icon-color',
      'unselected-outline-color': 'outline-color',
      'unselected-outline-width': 'outline-width',
      'unselected-pressed-icon-color': 'pressed-icon-color',
      'unselected-pressed-state-layer-color': 'pressed-state-layer-color',
      'unselected-focus-state-layer-color': 'focus-state-layer-color'
    )
  );

@if not $exclude-custom-properties {
  @each $token, $value in $tokens {
    @if string.index($token, 'container-shape-')==1 {
      $value: var(--gu-outlined-icon-button-container-shape, #{$value});
    }

    $tokens: map.set($tokens,
        $token,
        var(--gu-outlined-icon-button-#{$token}, #{$value}));
  }
}

@return $tokens;
}
