//
// Copyright 2023 Google LLC
// SPDX-License-Identifier: Apache-2.0
//
//
// !!! THIS FILE WAS AUTOMATICALLY GENERATED !!!
// !!! DO NOT MODIFY IT BY HAND !!!
// Design system display name: Google Material 3
// Design system version: v0.192
// User-configured context group "Audience": "3P"
// User-configured context group "Platform": "Web"
// User-configured context group "Scheme": "Dynamic"
//

@use 'sass:map';
@use '../../color';
@use '../../elevation';
@use '../../shape';
@use '../../state';
@use '../../typescale';

$_default: (
  'gu-sys-color': color.values-light(),
  'gu-sys-elevation': elevation.values(),
  'gu-sys-shape': shape.values(),
  'gu-sys-state': state.values(),
  'gu-sys-typescale': typescale.values(),
);

@function values($deps: $_default, $exclude-hardcoded-values: false) {
  @return ('container-color': map.get($deps, 'gu-sys-color', 'secondary-container'),
    'container-elevation': map.get($deps, 'gu-sys-elevation', 'level0'),
    'container-height': if($exclude-hardcoded-values, null, 40px),
    'container-shadow-color': map.get($deps, 'gu-sys-color', 'shadow'),
    'container-shape': map.get($deps, 'gu-sys-shape', 'corner-full'),
    'disabled-container-color': map.get($deps, 'gu-sys-color', 'on-surface'),
    'disabled-container-elevation': map.get($deps, 'gu-sys-elevation', 'level0'),
    'disabled-container-opacity': if($exclude-hardcoded-values, null, 0.12),
    'disabled-label-text-color': map.get($deps, 'gu-sys-color', 'on-surface'),
    'disabled-label-text-opacity': if($exclude-hardcoded-values, null, 0.38),
    'focus-container-elevation': map.get($deps, 'gu-sys-elevation', 'level0'),
    'focus-label-text-color': map.get($deps, 'gu-sys-color', 'on-secondary-container'),
    'focus-state-layer-color': map.get($deps, 'gu-sys-color', 'on-secondary-container'),
    'focus-state-layer-opacity': map.get($deps, 'gu-sys-state', 'focus-state-layer-opacity'),
    'hover-container-elevation': map.get($deps, 'gu-sys-elevation', 'level1'),
    'hover-label-text-color': map.get($deps, 'gu-sys-color', 'on-secondary-container'),
    'hover-state-layer-color': map.get($deps, 'gu-sys-color', 'on-secondary-container'),
    'hover-state-layer-opacity': map.get($deps, 'gu-sys-state', 'hover-state-layer-opacity'),
    'label-text-color': map.get($deps, 'gu-sys-color', 'on-secondary-container'),
    'label-text-font': map.get($deps, 'gu-sys-typescale', 'label-large-font'),
    'label-text-line-height': map.get($deps, 'gu-sys-typescale', 'label-large-line-height'),
    'label-text-size': map.get($deps, 'gu-sys-typescale', 'label-large-size'),
    'label-text-tracking': map.get($deps, 'gu-sys-typescale', 'label-large-tracking'),
    'label-text-type': if($exclude-hardcoded-values,
      null,
      /** Warning: risk of reduced fidelity from using this composite typography token. Tokens gu.comp.filled-tonal-button.label-text.tracking cannot be represented in the "font" property shorthand. Consider using the discrete properties instead. */
      map.get($deps, 'gu-sys-typescale', 'label-large-weight') map.get($deps, 'gu-sys-typescale', 'label-large-size') #{'/'} map.get($deps,
        'gu-sys-typescale',
        'label-large-line-height'
      ) map.get($deps, 'gu-sys-typescale', 'label-large-font')),
    'label-text-weight': map.get($deps, 'gu-sys-typescale', 'label-large-weight'),
    'pressed-container-elevation': map.get($deps, 'gu-sys-elevation', 'level0'),
    'pressed-label-text-color': map.get($deps, 'gu-sys-color', 'on-secondary-container'),
    'pressed-state-layer-color': map.get($deps, 'gu-sys-color', 'on-secondary-container'),
    'pressed-state-layer-opacity': map.get($deps, 'gu-sys-state', 'pressed-state-layer-opacity'),
    'with-icon-disabled-icon-color': map.get($deps, 'gu-sys-color', 'on-surface'),
    'with-icon-disabled-icon-opacity': if($exclude-hardcoded-values, null, 0.38),
    'with-icon-focus-icon-color': map.get($deps, 'gu-sys-color', 'on-secondary-container'),
    'with-icon-hover-icon-color': map.get($deps, 'gu-sys-color', 'on-secondary-container'),
    'with-icon-icon-color': map.get($deps, 'gu-sys-color', 'on-secondary-container'),
    'with-icon-icon-size': if($exclude-hardcoded-values, null, 18px),
    'with-icon-pressed-icon-color': map.get($deps, 'gu-sys-color', 'on-secondary-container'));
}
